{"version":3,"sources":["panels/Questionnaire.js","components/EventList.js","components/Profile.js","components/AdminPanel.js","panels/Home.js","panels/Event.js","panels/EventForm.js","components/Modal.js","panels/TaskForm.js","panels/OrgEvents.js","panels/VolunteersList.js","App.js","index.js"],"names":["osName","platform","Questionnaire","id","go","data","alert","useState","phone","setPhone","email","setEmail","user","last_name","first_name","father_name","bdate","sex","occupation","specialty","languages","volExp","childExp","extraSkills","expects","medContrad","foodPref","infoSource","size","isAgree","useEffect","a","connect","sendPromise","fetchData","onChange","e","currentTarget","name","value","fetch","museum","phone_number","mode","resp","json","success","theme","left","onClick","data-to","IOS","top","defaultValue","placeholder","type","text","map","key","event","sendData","EventList","events","title","active","eventCells","setEventCells","item","data-event","JSON","stringify","before","src","photo_100","description","activity","date","isApplied","Boolean","parse","isOpenToApply","asideContent","Profile","fetchedUser","rating","setRating","user_rating","getRating","photo_200","city","AdminPanel","Home","token","groups","setGroups","actualEvents","setActualEvents","pastEvents","setPastEvents","getActualEvents","method","setEvents","vkIds","vk_id","join","vkGroups","response","i","eventId","event_id","is_open_to_apply","is_user_applied","organizerId","organizer_id","managerId","manager_id","admin","setEventData","eventDB","VK","Event","register","eventData","getEventDBData","photo","bottomContent","href","multiline","place","volunteers_task","volunteer_requirements","time_periods","period","is_available","time_period","data-period_ids","data-event_id","EventForm","openModal","selectedEventJSON","periodsList","userId","clearSelectedEvent","selectedEvent","setSelectedEvent","formState","setFormState","periods","setPeriods","count","level","data-modal_id","weight","Modal","activeModalId","closeModal","activeModal","setActiveModal","setPeriod","listEventCells","setListEvents","items","data-selected_event","onClose","header","caption","actions","action","TaskForm","taskState","setTask","send","OrgEvents","eventsData","getOrgEvents","VolunteersList","users","setUsers","eventName","setEventName","volunteers","volunteer_id","parsedEvent","getVolunteers","expandable","App","activePanel","setActivePanel","activeModalPage","setActiveModalPage","openedEvent","setOpenedEvent","setUser","setToken","popout","setPopout","userStatus","user_status","access_token","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","dataset","to","closePopout","showPopout","message","actionsLayout","period_ids","res","modal","selected_event","modal_id","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5929c3dd.chunk.js","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {\n    platform,\n    Button,\n    Checkbox,\n    FormLayout,\n    HeaderButton,\n    Input, IOS,\n    Panel,\n    PanelHeader,\n    Select,\n    Textarea\n} from \"@vkontakte/vkui\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport connect from \"@vkontakte/vk-connect\";\n\nconst osName = platform();\n\nconst Questionnaire = ({id, go, data, alert}) => {\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const user = {\n        last_name: data.last_name, first_name: data.first_name, father_name: '',\n        bdate: data.bdate, sex: data.sex === 2 ? '2' :(data.sex === 1 ? '1' : '0'),\n        email: '', phone: '',\n        occupation: '', specialty: '', languages: '',\n        volExp: '', childExp: '', extraSkills: '',\n        expects: '', medContrad: '', foodPref: '',\n        infoSource: '', size: '', isAgree: \"off\"\n    };\n\n    const texts = [{name: 'volExp', text: 'Опыт волонтёрской деятельности'},\n        {name: 'museum', text: 'Ваш музей'},\n        {name: 'childExp',text: 'Опыт работы с детьми'},\n        {name: 'extraSkills',text: 'Дополнительные навыки'},\n        {name: 'expects',text: 'Ожидания'},\n        {name: 'medContrad',text: 'Медицинские противопоказания'},\n        {name: 'foodPref',text: 'Предпочтения в еде'},\n        {name: 'infoSource',text: 'Откуда Вы о нас узнали?'}];\n\n    useEffect(() => {\n        async function fetchData() {\n            const phone = await connect.sendPromise('VKWebAppGetPhoneNumber');\n            const email = await connect.sendPromise('VKWebAppGetEmail');\n            setPhone(phone);\n            setEmail(email);\n        }\n        fetchData();\n    }, []);\n\n    const onChange = (e) => {\n        const { name, value } = e.currentTarget;\n        user[name] = value;\n    };\n\n    async function sendData() {\n        const resp = await fetch(\n            `https://demo11.alpha.vkhackathon.com:433/api/user/setProfile?auth=oX5n!E2i.VpWpHeo8E6F0q\n&vk_id=${data.id}&surname=${user.last_name}&first_name=${user.first_name}\n&second_name=${user.father_name}&birthday=${user.bdate}&sex=${user.sex}&museum=${user.museum}\n&email=${user.email ? user.email : email.email}&phone=${user.phone ? user.phone : phone.phone_number}\n&occupation=${user.occupation}&langs=${user.languages}&volunteer_experience=${user.volExp}\n&children_work_experience=${user.childExp}\n&skills=${user.extraSkills}&expectations=${user.expects}\n&medical_contraindications=${user.medContrad}&specialty=${user.specialty}\n&food_preferences=${user.foodPref}&clothes_size=${user.size}\n&information_source=${user.infoSource}\n&mailing_agreement=${user.isAgree === \"on\" ? \"true\" : \"false\"}`,\n            {mode: \"cors\"});\n        const json = await resp.json();\n        if(json.success) {\n            alert(\"Сохранено\");\n        } else {\n            alert(\"Ошибка, попробуйте снова\");\n        }\n    }\n\n    return (\n            <Panel id={id} theme=\"white\">\n                <PanelHeader\n                    left={<HeaderButton onClick={go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </HeaderButton>}\n                >\n                    Анкета волонтёра\n                </PanelHeader>\n                <FormLayout name='new-volunteer'>\n                    <Input top=\"Фамилия\" name='last_name'\n                           onChange={onChange}\n                           defaultValue={user.last_name}\n                    />\n                    <Input top=\"Имя\" name='first_name'\n                           onChange={onChange}\n                           defaultValue={user.first_name}\n                    />\n                    <Input top=\"Отчество\" name='father_name'\n                           onChange={onChange}\n                           defaultValue={user.father_name}\n                    />\n                    <Input top=\"Дата рождения\" name='bdate'\n                           onChange={onChange}\n                           defaultValue={user.bdate}\n                    />\n\n                    <Select top=\"Пол\" placeholder=\"Выберите пол\" name=\"sex\"\n                            defaultValue={user.sex}\n                            onChange={onChange}\n                    >\n                        <option value=\"2\">Мужской</option>\n                        <option value=\"1\">Женский</option>\n                    </Select>\n\n                    <Input type=\"email\" top=\"E-mail\" name=\"email\"\n                           onChange={onChange}\n                           defaultValue={email.email}\n                    />\n\n                    <Input type=\"tel\" top='Телефон' name=\"phone\"\n                           onChange={onChange}\n                           defaultValue={phone.phone_number}\n                    />\n\n                    <Input top='Место учёбы/работы' name=\"occupation\"\n                           onChange={onChange}\n                           defaultValue={user.occupation}\n                    />\n                    <Input top='Специальность' name=\"specialty\"\n                           onChange={onChange}\n                           defaultValue={user.specialty}\n                    />\n                    <Input top='Языки' name=\"languages\"\n                           onChange={onChange}\n                           defaultValue={user.languages}\n                    />\n\n                    {texts.map(({name, text}) => (\n                        <Textarea name={name} key={name} top={text}\n                                  onChange={onChange}\n                                  defaultValue={user[name]}\n                        />\n                    ))}\n\n                    <Select top=\"Размер одежды\" placeholder=\"Выберите размер одежды\"\n                            name=\"size\"\n                            onChange={onChange}\n                            defaultValue={user.size}\n                    >\n                        <option value=\"xs\">XS</option>\n                        <option value=\"s\">S</option>\n                        <option value=\"m\">M</option>\n                        <option value=\"l\">L</option>\n                        <option value=\"xl\">XL</option>\n                        <option value=\"xxl\">XXL</option>\n                    </Select>\n\n                    <Checkbox name=\"isAgree\"\n                              onChange={onChange}\n                    >\n                        Согласны ли Вы на получение рассылки?\n                    </Checkbox>\n\n                    <Button size=\"xl\" onClick={(event) => {sendData(); go(event)}}\n                            data-to=\"home\">\n                        Отправить анкету\n                    </Button>\n                </FormLayout>\n            </Panel>\n        );\n};\n\nexport default Questionnaire;","import React, { useState, useEffect } from 'react';\nimport { Group, List, Cell, Avatar, Button,  Div } from '@vkontakte/vkui';\n\nconst EventList = ({ events, title, go, active }) => {\n\tconst [eventCells, setEventCells] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetEventCells(events.map(item => {\n\t\t\tif(!active) {\n\t\t\t\treturn  (<Cell onClick={go} data-to=\"event\" data-event={JSON.stringify(item)}\n\t\t\t\t\t\t\tbefore={<Avatar src={item.photo_100} />} description={item.activity || item.date}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</Cell>)\n\t\t\t}\n\n\t\t\tconst isApplied = Boolean(JSON.parse(item.isApplied));\n\t\t\tconst isActive = Boolean(JSON.parse(item.isOpenToApply)) && !isApplied;\n\n\t\t\treturn isActive ?\n\t\t\t\t(<Cell onClick={go} data-to=\"event\" data-event={JSON.stringify({...item, active})}\n\t\t\t\t\tbefore={<Avatar src={item.photo_100} />} description={item.activity || item.date}\n\t\t\t\t\tasideContent={<Button onClick={alert} >Записаться</Button>} >\n\t\t\t\t\t{item.name}\n\t\t\t\t</Cell>) : (\n\t\t\t\t\t<Cell onClick={go} data-to=\"event\" data-event={JSON.stringify(item)}\n\t\t\t\t\tbefore={<Avatar src={item.photo_100} />} description={item.activity || item.date}\n\t\t\t\t\tasideContent={ isApplied ? <Div>Вы записаны</Div> : <Div>Запись закрыта</Div>} >\n\t\t\t\t\t{item.name}\n\t\t\t\t</Cell>\n\t\t\t\t);\n\t\t}));\n\t}, [events, go, active]);\n\n\treturn (\n\t\t<Group title={title}>\n\t\t\t<List>\n\t\t\t\t{eventCells}\n\t\t\t</List>\n\t\t</Group>\n\t);\n};\n\nexport default EventList;","import React, { useState, useEffect } from 'react';\nimport { Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Profile = ({ fetchedUser, go}) => {\n    const [rating, setRating] = useState(0);\n\n\tuseEffect(() => {\n        async function getRating() {\n            const resp = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/user/getRating?auth=oX5n!E2i.VpWpHeo8E6F0q`, {\n                mode: \"cors\"\n            });\n\n            const rating = await resp.json();\n\n\t\t    setRating(rating.user_rating);\n        }\n\n        getRating();\n    }, []);\n\n\treturn (\n\t\t<Group title=\"Мой профиль\" onClick={go} data-to=\"new-user\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                asideContent={<Div>Рейтинг: { rating }</Div>}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>\n\t);\n};\n\nexport default Profile;","import React from 'react';\nimport { Group, List, CellButton } from \"@vkontakte/vkui\";\n\nconst AdminPanel = ({go}) => {\n    return (\n        <Group title=\"Панель управления\">\n            <List>\n                <CellButton onClick={go} data-to=\"org-events\">\n                    Мои мероприятия\n                </CellButton>\n                <CellButton onClick={go} data-to=\"event-form\">\n                    Создать мероприятие\n                </CellButton>\n                <CellButton onClick={go} data-to=\"task-form\">\n                    Создать задание\n                </CellButton>\n            </List>\n        </Group>\n    )\n}\n\nexport default AdminPanel;","import React, { useState, useEffect }  from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport EventList from '../components/EventList';\nimport Profile from \"../components/Profile\";\nimport AdminPanel from '../components/AdminPanel';\n\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, alert, fetchedUser, token }) => {\n\tconst [groups, setGroups] = useState(null);\n\tconst [actualEvents, setActualEvents] = useState([]);\n\tconst [pastEvents, setPastEvents] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function getActualEvents(method, setEvents) {\n\t\t\tconst resp = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/events/${method}?auth=oX5n!E2i.VpWpHeo8E6F0q&user_id=${fetchedUser.id}`, {\n                mode: \"cors\"\n            });\n\n\t\t\tlet actualEvents = await resp.json();\n\n\t\t\tif(!actualEvents) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst vkIds = actualEvents.map(item => item.vk_id);\n\n\t\t\tconst vkGroups = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n\t\t\t\t\"method\": \"groups.getById\",\n\t\t\t\t\"request_id\": \"actual_events_from_vk\",\n\t\t\t\t\"params\": {\n\t\t\t\t\t\"v\":\"5.101\",\n\t\t\t\t\t\"group_ids\": vkIds.join(','),\n\t\t\t\t\t\"fields\": \"activity,photo_100,place,description,start_date,finish_date,photo_200\",\n\t\t\t\t\t\"access_token\": token\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tactualEvents = vkGroups.response.map((item, i) =>  {\n\t\t\t\titem.eventId = actualEvents[i].event_id;\n\t\t\t\titem.isOpenToApply = actualEvents[i].is_open_to_apply;\n\t\t\t\titem.isApplied = actualEvents[i].is_user_applied;\n\t\t\t\titem.organizerId = actualEvents[i].organizer_id;\n\t\t\t\titem.managerId = actualEvents[i].manager_id;\n\t\t\t\treturn item;\n\t\t\t})\n\n\t\t    setEvents(actualEvents);\n\t\t}\n\n\t\tasync function fetchData() {\n\t\t\tconst groups = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n\t\t\t\t\"method\": \"groups.getById\",\n\t\t\t\t\"request_id\": \"groups_from_base\",\n\t\t\t\t\"params\": {\n\t\t\t\t\t\"v\":\"5.101\",\n\t\t\t\t\t\"group_ids\": \"gagadnd,210,324,43545,43452,5656,13\",\n\t\t\t\t\t\"fields\": \"activity,photo_100,place,description,start_date,finish_date,photo_200\",\n\t\t\t\t\t\"access_token\": token\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetGroups(groups && groups.response);\n\t\t}\n\n\t\tfetchData();\n\t\tif(fetchedUser) {\n\t\t\tgetActualEvents('getActualEvents', setActualEvents);\n\t\t\tgetActualEvents('getMyPastEvents', setPastEvents);\n\t\t}\n\t\t\n    }, [token, fetchedUser]);\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>\n\t\t\t\tСпутник\n\t\t\t</PanelHeader>\n\t\t\t{fetchedUser &&\n\t\t\t\t<Profile go={go} fetchedUser={fetchedUser}/>\n\t\t\t}\n\t\t\t{fetchedUser && fetchedUser.admin && <AdminPanel go={go} ></AdminPanel>}\n\t\t\t{groups && <EventList title=\"Предстоящие мероприятия\" events={actualEvents} go={go} active={true} alert={alert} />}\n\t\t\t{groups && <EventList title=\"Прошедшие мероприятия\" events={pastEvents} go={go} active={false} alert={alert} />}\n\t\t</Panel>\n\t)\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport {\n    platform, IOS, Group,\n    Cell, Button, Avatar, Div,\n    InfoRow, List,  Link,\n    FormLayoutGroup, Checkbox, FormLayout,\n    HeaderButton, Panel, PanelHeader\n} from '@vkontakte/vkui';\nconst osName = platform();\n\nexport async function getEventDBData(event, setEventData) {\n    const resp = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/events/getEvent?auth=oX5n!E2i.VpWpHeo8E6F0q&id=${event.eventId}`, {\n        mode: \"cors\"\n    });\n\n    const eventDB = await resp.json();\n\n    setEventData({ VK: event, ...eventDB });\n}\n\nconst Event = ({ event, go, id, register }) => {\n    const [eventData, setEventData] = useState({});\n\n    useEffect(() => {\n\n        const eventShort = JSON.parse(event);\n        getEventDBData(eventShort, setEventData);\n\n    }, [event]);\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<HeaderButton onClick={go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </HeaderButton>}\n            >\n                {eventData.active ? 'Запись на мероприятие' : \"Описание мероприятия\"}\n            </PanelHeader>\n            {eventData.VK && eventData.VK.id && <Group>\n                <Cell\n                    photo={eventData.VK.photo_200}\n                    //todo через start_date\n                    description={eventData.VK.activity}\n                    bottomContent={eventData.VK.description}\n                    asideContent={<Link href={`https//vk.com/club${eventData.VK.id}`}><Button>В группу</Button></Link>}\n                    before={<Avatar src={eventData.VK.photo_200} size={56} />}\n                    size=\"l\"\n                >\n                    {eventData.VK.name}\n                </Cell>\n            </Group>}\n            <Group>\n                <List>\n                    <Cell multiline>\n                        <InfoRow title=\"Название\">\n                            {eventData.name}\n                        </InfoRow></Cell>\n                    <Cell multiline>\n                        <InfoRow title=\"Описание\">\n                            {eventData.description}\n                        </InfoRow></Cell>\n                    <Cell multiline>\n                        <InfoRow title=\"Дата проведения\">\n                            {eventData.date}\n                        </InfoRow></Cell>\n                    <Cell multiline>\n                        <InfoRow title=\"Место проведения\">\n                            {eventData.place}\n                        </InfoRow></Cell>\n                    <Cell multiline>\n                        <InfoRow title=\"Задачи волонтеров\">\n                            {eventData.volunteers_task}\n                        </InfoRow>\n                    </Cell>\n                    <Cell multiline>\n                        <InfoRow title=\"Требования к волонтерам\">\n                            {eventData.volunteer_requirements}\n                        </InfoRow>\n                    </Cell>\n                    {eventData.VK && eventData.VK.active && <FormLayout>\n                        <FormLayoutGroup top=\"Выберите удобное время\">\n                            { eventData.time_periods && eventData.time_periods.map(period =>  {\n                                const isAvailable = period.is_available == 'true';\n                                return isAvailable? (\n                                    <Checkbox>{period.time_period}</Checkbox>\n                                ) : (\n                                    <Div>{period.time_period}</Div>\n                                );\n                            })}\n                        </FormLayoutGroup>\n                        <Button onClick={register} data-period_ids={'1,2,3'} data-event_id={eventData.VK.id}>Записаться</Button>\n                    </FormLayout>}\n\n                </List>\n            </Group>\n\n        </Panel>\n    )\n};\n\nexport default Event;\n","import React, { useState, useEffect } from 'react';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon16Add from '@vkontakte/icons/dist/16/add';\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel';\n\nimport {\n    platform, IOS, FormLayout, List, Div,\n    HeaderButton, Panel, PanelHeader, Group, CellButton, Cell, Avatar, Button, Textarea, FormLayoutGroup, Input\n} from '@vkontakte/vkui';\nconst osName = platform();\n\nconst EventForm = ({ go, id, openModal, selectedEventJSON, periodsList, userId, clearSelectedEvent }) => {\n    const [selectedEvent, setSelectedEvent] = useState(null);\n    const [formState, setFormState] = useState({});\n    const [periods, setPeriods] = useState([]);\n\n    const createEvent = () => {\n        async function sendData() {\n            const resp = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/events/createEvent\n?auth=oX5n!E2i.VpWpHeo8E6F0q\n&user_vk_id=${userId}\n&vk_id=${formState.vk_id}\n&name=${formState.name}\n&description=${formState.description}\n&weight=${formState.weight}\n&date=${formState.date}\n&volunteers_task=${formState.volunteers_task}\n&volunteer_requirements=${formState.volunteer_requirements}\n&place=${formState.place}`, {\n                    mode: \"cors\"\n                });\n\n            const success = await resp.json();\n        }\n\n        sendData();\n    }\n\n    useEffect(() => {\n        const event = JSON.parse(selectedEventJSON);\n        setSelectedEvent(event);\n        if (event) {\n            setFormState({ ...formState, name: event && event.name, vk_id: event.id, description: event.description })\n        }\n        setPeriods(periodsList);\n    }, [selectedEventJSON, periodsList]);\n\n    useEffect(() => {\n        setFormState({ ...formState, time_periods: periods.map(item => `${item.period}%${item.count}`).join('$') })\n    }, [periods])\n\n    const onChange = (e) => {\n        const { name, value } = e.currentTarget;\n        setFormState({ ...formState, [name]: value })\n    };\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<HeaderButton onClick={go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </HeaderButton>}\n            >\n                Создать мероприятие\n            </PanelHeader>\n\n            <Group title=\"Группа мероприятия\">\n                {selectedEvent && <Cell\n                    before={<Avatar src={selectedEvent.photo_100} size={56} />}\n                    size=\"xl\"\n                    description={selectedEvent.activity}\n                    asideContent={<Button before={<Icon16Cancel/>} level=\"destructive\" onClick={clearSelectedEvent}>Удалить</Button>}\n                >\n                    {selectedEvent.name}</Cell>}\n                <CellButton onClick={openModal} data-modal_id='select-event'>{selectedEvent ? 'Изменить' : 'Привязать мероприятие'}</CellButton>\n            </Group>\n            <Group>\n                <FormLayout>\n                    {selectedEvent ? <Input top=\"Название мероприятия\" name=\"name\" defaultValue={selectedEvent.name} onChange={onChange}></Input> :\n                    <Input top=\"Название мероприятия\" name=\"name\" onChange={onChange}></Input>}\n                    <Input top=\"Вес мероприятия\" name=\"weight\" onChange={onChange}></Input>\n                    <Textarea top=\"Описание\" name=\"description\" onChange={onChange}>{\"dfgdhd\"}</Textarea>\n                    <Input top=\"Дата проведения\" name=\"date\" onChange={onChange}></Input>\n                    <Textarea top=\"Место проведения\" name=\"place\" onChange={onChange}></Textarea>\n                    <Textarea top=\"Задачи волонтеров\" name=\"volunteers_task\" onChange={onChange}></Textarea>\n                    <Textarea top=\"Требования к волонтерам\" name=\"volunteer_requirements\" onChange={onChange}></Textarea>\n                    <FormLayoutGroup top=\"Временные промежутки\">\n                        <Group>\n                            <List>\n                                {periods.map((item, i) => (<Cell asideContent={item.count}>{item.period}</Cell>))}\n                            </List>\n                            <CellButton before={<Icon16Add/>} onClick={openModal} data-modal_id='add-time-period'>Добавить\n                            временной промежуток</CellButton>\n                        </Group>\n                    </FormLayoutGroup>\n                    <Div>\n                        <Button size=\"xl\" onClick={createEvent} level=\"secondary\">Создать</Button>\n                    </Div>\n                </FormLayout>\n            </Group>\n        </Panel>\n    )\n};\n\nexport default EventForm;\n","import React, { useState, useEffect } from 'react';\nimport { ModalRoot, ModalPage, ModalCard, ModalPageHeader, HeaderButton, platform, IOS, Group, List, Cell, Avatar, Button, Input, FormLayout } from \"@vkontakte/vkui\";\n\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport connect from '@vkontakte/vk-connect';\n\n\nconst osName = platform();\n\nconst Modal = ({ activeModalId, closeModal, token }) => {\n  const [activeModal, setActiveModal] = useState(null);\n  const [period, setPeriod] = useState({});\n  const [listEventCells, setListEvents] = useState(null);\n\n  const onChange = (e) => {\n    const { name, value } = e.currentTarget;\n    setPeriod({...period, [name]: value})\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const groups = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n        \"method\": \"groups.get\",\n        \"request_id\": \"groups_active\",\n        \"params\": {\n          \"v\": \"5.101\",\n          \"filter\": \"events\",\n          \"extended\": \"1\",\n          \"fields\": \"activity,photo_100,place,description,start_date,finish_date,photo_200\",\n          \"access_token\": token\n        }\n      });\n\n      setListEvents(groups && groups.response && groups.response.items && groups.response.items.map((item) => {\n        return (<Cell\n          before={<Avatar src={item.photo_100} size={56} />}\n          size=\"xl\"\n          description={item.activity}\n          asideContent={\n            <Button onClick={closeModal} data-selected_event={JSON.stringify(item)} size=\"l\">Привязать</Button>\n          }\n        >\n          {item.name}</Cell>)\n      }));\n    }\n\n    fetchData();\n  }, [token, closeModal]);\n\n  useEffect(() => {\n    setActiveModal(activeModalId);\n  }, [activeModalId])\n\n  return (\n    <ModalRoot activeModal={activeModal}>\n      <ModalPage id=\"select-event\"\n        onClose={closeModal}\n        data-selected_event='null'\n        header={\n          <ModalPageHeader\n            left={osName !== IOS && <HeaderButton onClick={closeModal} data-selected_event='null'><Icon24Cancel /></HeaderButton>}\n          >\n            Мои мероприятия\n          </ModalPageHeader>\n        }>\n        <Group>\n          <List>\n            {listEventCells}\n          </List>\n        </Group>\n      </ModalPage>\n      <ModalCard\n        id='add-time-period'\n        title=\"Укажите временной промежуток для работы\"\n        caption=\"Так же нужно максимальное количество волонтеров\"\n        actions={[{\n          title: 'Добавить',\n          type: 'primary',\n          action: () => {\n            closeModal({period});\n          }\n        }]}\n      >\n        <Group>\n          <FormLayout>\n            <Input top=\"Временной промежуток\" \n            onChange={onChange} name=\"period\"></Input>\n            <Input top=\"Количество волонтеров\" onChange={onChange} name=\"count\"></Input>\n          </FormLayout>\n        </Group>\n      </ModalCard>\n    </ModalRoot>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\n\n\nimport {\n    platform, IOS,\n    HeaderButton, Panel, PanelHeader, Button, Textarea, FormLayout, File, Div, Avatar\n} from '@vkontakte/vkui';\nconst osName = platform();\n\nconst TaskForm = ({ go, id }) => {\n    const [taskState, setTask] = useState({});\n\n    const sendTask = () =>  {\n        async function send() {\n            const resp = await fetch(`https://demo11.alpha.vkhackathon.com:1488/api/tasks/create?auth=oX5n!E2i.VpWpHeo8E6F0q&message=${taskState.description}`, {\n                mode: \"cors\"\n            });\n\n            const eventsData = await resp.json();\n        }\n\n        send();\n    }\n\n    const onChange = (e) => {\n        const { name, value } = e.currentTarget;\n        setTask({...taskState, [name]: value});\n    };\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<HeaderButton onClick={go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </HeaderButton>}\n            >\n                Создать задание\n            </PanelHeader>\n            <FormLayout>\n                <File top=\"Загрузите ваше фото\" name=\"file\" onChange={onChange} before={<Icon24Camera />} size=\"l\">\n                    Открыть галерею\n                </File>\n                <Textarea name=\"description\" onChange={onChange} top='Описание задания'>\n                </Textarea>\n                <Button onClick={sendTask}>Разослать волонтерам</Button>\n            </FormLayout>\n        </Panel>\n    )\n};\n\nexport default TaskForm;\n","import React, { useState, useEffect } from 'react';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport EventList from '../components/EventList';\nimport {\n    platform, IOS,\n    HeaderButton, Panel, PanelHeader, Cell, Avatar\n} from '@vkontakte/vkui';\n\nconst osName = platform();\n\n\nconst OrgEvents = ({ id, go, user }) => {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        async function getOrgEvents() {\n            const resp = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/events/getMyOrgEvents?auth=oX5n!E2i.VpWpHeo8E6F0q&vk_id=${user.id}`, {\n                mode: \"cors\"\n            });\n\n            const eventsData = await resp.json();\n\n            setEvents(eventsData);\n        }\n\n        getOrgEvents();\n    }, [])\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<HeaderButton onClick={go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </HeaderButton>}\n            >\n                Мои мероприятия\n        </PanelHeader>\n            {events && events.map(item => {\n                item.id = item.vk_id;\n                return (<Cell onClick={go} data-to=\"vol-list\" data-event={JSON.stringify(item)}\n                    before={<Avatar src={item.photo_100} />} description={item.activity || item.date}\n                >\n                    {item.name}\n                </Cell>);\n            })}\n        </Panel>\n    );\n}\n\nexport default OrgEvents;\n","import React, { useState, useEffect } from 'react';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\nimport connect from '@vkontakte/vk-connect';\n\nimport {\n    platform, IOS,\n    HeaderButton, Panel, PanelHeader, Cell, Avatar, Group, List, CellButton\n} from '@vkontakte/vkui';\n\nconst osName = platform();\n\n\nconst VolunteersList = ({ id, go, event, token, alert }) => {\n    const [users, setUsers] = useState([]);\n    const [eventName, setEventName] = useState('');\n\n    useEffect(() => {\n        async function getVolunteers(event) {\n            const users = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n                \"method\": \"users.get\",\n                \"request_id\": \"volunteers_from_vk\",\n                \"params\": {\n                    \"v\": \"5.101\",\n                    \"user_ids\": event.volunteers.map(item => item.volunteer_id).join(','),\n                    \"fields\": \"photo_100\",\n                    \"access_token\": token\n                }\n            });\n            setUsers(users.response);\n        }\n\n        const parsedEvent = JSON.parse(event);\n        if (parsedEvent) {\n            getVolunteers(parsedEvent);\n            setEventName(parsedEvent.name);\n        }\n    }, [event])\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<HeaderButton onClick={go} data-to=\"org-events\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </HeaderButton>}\n            >\n                {eventName}\n            </PanelHeader>\n            <Group title=\"Волонтеры\">\n                <List>\n                    {users.map(user => {\n                        return (<Cell expandable before={<Avatar src={user.photo_100} size={48} />} size=\"m\">\n                            {`${user.first_name} ${user.last_name}`}\n                        </Cell>);\n                    })}\n                </List>\n            </Group>\n        </Panel>\n    );\n}\n\nexport default VolunteersList;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Alert } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\n\nimport Questionnaire from \"./panels/Questionnaire\";\nimport Home from './panels/Home';\nimport Event from './panels/Event';\nimport EventForm from './panels/EventForm';\nimport Modal from './components/Modal';\nimport TaskForm from './panels/TaskForm';\nimport OrgEvents from './panels/OrgEvents';\nimport VolunteersList from './panels/VolunteersList';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [activeModalPage, setActiveModalPage] = useState(null);\n\tconst [openedEvent, setOpenedEvent] = useState(null);\n\tconst [selectedEvent, setSelectedEvent] = useState(null);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [token, setToken] = useState('');\n\tconst [periods, setPeriods] = useState([]);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tconst token = await connect.sendPromise(\"VKWebAppGetAuthToken\", { \"app_id\": 7150436, \"scope\": \"groups\" });\n\n\t\t\tconst resp = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/user/getUserStatus?auth=oX5n!E2i.VpWpHeo8E6F0q&vk_id=${user.id}`, {\n\t\t\t\tmode: \"cors\"\n\t\t\t});\n\n\t\t\tlet userStatus = await resp.json();\n\n\t\t\tsetUser({ ...user, admin: userStatus.user_status });\n\t\t\tsetToken(token.access_token);\n\t\t\tsetPopout(null);\n\t\t}\n\n\t\tfetchData();\n\t}, []);\n\n\tconst go = (e) => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\tif (e.currentTarget.dataset.event) {\n\t\t\tsetOpenedEvent(e.currentTarget.dataset.event);\n\t\t}\n\t};\n\n\tconst closePopout = () => {\n\t\tsetPopout(null);\n\t};\n\n\tconst showPopout = (message) => {\n\t\tsetPopout(\n\t\t\t<Alert\n\t\t\t\tactionsLayout=\"vertical\"\n\t\t\t\tonClose={closePopout}\n\t\t\t>\n\t\t\t\t<h2>{message}</h2>\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tconst alert = e => {\n\t\tshowPopout(e.currentTarget.dataset.message);\n\t}\n\n\tasync function register(e) {\n\t\tconst res = await fetch(`https://demo11.alpha.vkhackathon.com:433/api/events/applyForEvent\n\t\t?auth=oX5n!E2i.VpWpHeo8E6F0q\n\t\t&user_vk_id=${fetchedUser.id}\n\t\t&event_id=${e.currentTarget.dataset.event_id}\n\t\t&time_period_ids=${e.currentTarget.dataset.period_ids}`, {\n\t\t\t\tmode: \"cors\"\n\t\t\t});\n\t\tconst status = await res.json();\n\t\tif (status.success) {\n\t\t\tshowPopout(\"Вы успешно зарегистрировались\");\n\t\t}\n\t}\n\n\tconst openModal = e => {\n\t\tsetActiveModalPage(e.currentTarget.dataset.modal_id);\n\t}\n\n\tconst clearSelectedEvent = () => {\n\t\tsetSelectedEvent(null);\n\t}\n\n\tconst closeModal = e => {\n\t\tif (e && e.currentTarget && e.currentTarget.dataset.selected_event) {\n\t\t\tsetSelectedEvent(e.currentTarget.dataset.selected_event);\n\t\t}\n\t\tif (e && e.period) {\n\t\t\tsetPeriods([...periods, e.period]);\n\t\t}\n\t\tsetActiveModalPage(null);\n\t}\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}\n\t\t\tmodal={\n\t\t\t\t<Modal token={token} closeModal={closeModal} activeModalId={activeModalPage}></Modal>\n\t\t\t}>\n\t\t\t<Home id='home' go={go} alert={alert} fetchedUser={fetchedUser} token={token} />\n\t\t\t<Questionnaire id='new-user' go={go} data={fetchedUser} alert={showPopout} />\n\t\t\t<Event id='event' event={openedEvent} go={go} register={register} />\n\t\t\t<EventForm id='event-form'\n\t\t\t\tgo={go}\n\t\t\t\tperiodsList={periods}\n\t\t\t\topenModal={openModal}\n\t\t\t\tclearSelectedEvent={clearSelectedEvent}\n\t\t\t\tselectedEventJSON={selectedEvent}\n\t\t\t\tuserId={fetchedUser && fetchedUser.id} />\n\t\t\t<TaskForm id='task-form' go={go} />\n\t\t\t<OrgEvents id='org-events' go={go} user={fetchedUser} ></OrgEvents>\n\t\t\t<VolunteersList id='vol-list' go={go} event={openedEvent} token={token} ></VolunteersList>\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}